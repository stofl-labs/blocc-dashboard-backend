plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'jacoco'
}

group = 'uk.ac.ic.doc.blocc'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hyperledger.fabric:fabric-gateway:1.2.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.+'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-test:6.0.11'
    testImplementation 'org.testcontainers:postgresql:1.18.+'
    compileOnly 'io.grpc:grpc-api:1.54.1'
    runtimeOnly 'io.grpc:grpc-netty-shaded:1.54.1'
}

checkstyle {
    toolVersion '10.11.0'
    configFile rootProject.file("config/checkstyle/google_checks.xml")
}

jacocoTestReport {

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            'uk/ac/ic/doc/blocc/dashboard/fabric/BloccConnections.class',
                            'uk/ac/ic/doc/blocc/dashboard/BloccDashboardApplication.class',
                            'uk/ac/ic/doc/blocc/dashboard/transaction/TransactionConfiguration.class'
                    ])
        }))
    }
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}
